---
// Component Imports
import BaseHead from '../components/BaseHead.astro';
import BlogHeader from '../components/BlogHeader.jsx';
import BlogPostPreview from '../components/BlogPostPreview.astro';

interface MarkdownFrontmatter {
  publishDate: number;
}

// Component Script:
// You can write any JavaScript/TypeScript that you'd like here.
// It will run during the build, but never in the browser.
// All variables are available to use in the HTML template below.
let title = 'Blog articles';
let description = 'I write articles about programming, for fun, you can check them out here!';
let permalink = 'https://stefan-asandei.cf';

// Data Fetching: List all Markdown posts in the repo.

let hiddenPosts = ["The day you fell asleep"]; // hide that story for now, ðŸŒ·

let allPosts = await Astro.fetchContent('./posts/*.md');
allPosts = allPosts.sort((a, b) => new Date(b.publishDate).valueOf() - new Date(a.publishDate).valueOf());

// Full Astro Component Syntax:
// https://docs.astro.build/core-concepts/astro-components/
---
<html lang="en">
  <script>
    let theme = 'dracula';
    document.documentElement.classList.add(theme);
    if(localStorage.getItem('theme')) {
      document.documentElement.classList.remove(theme);
      theme = localStorage.getItem('theme');
      document.documentElement.classList.add(theme);
    }
  </script>
  <head>
    <BaseHead title={title} description={description} permalink={permalink} />
    <link rel="stylesheet" href={Astro.resolve('../styles/blog.css')} />

    <style>
      header {
        width: 100%;
        height: 100%;
        background-color: var(--theme-bg-offset);
        display: flex;
        align-items: center;
        justify-content: center;
      }

      .content {
        margin-top: 4rem;
        margin-bottom: 8rem;
      }

      .content :global(main > * + *) {
        margin-top: 1rem;
      }

      .intro {
        padding-bottom: 4rem;
        margin-bottom: 2rem;
        border-bottom: 4px solid var(--nord-black);
      }

      .intro > * {
        margin: 0;
      }

      .latest {
        font-size: 2.5rem;
        font-weight: 700;
      }
    </style>
  </head>

  <body>
    <BlogHeader client:load/>
    <div class="wrapper">
      <main class="content">
        <section class="intro">
          <h1 class="latest">{title}</h1>
          <p>{description}</p>
        </section>
        <section aria-label="Blog post list">
          {allPosts.map(p => {
            if(!hiddenPosts.includes(p.title)) {
              return <BlogPostPreview key={p.id} post={p} />;
            }
          })}
        </section>
      </main>
    </div>
  </body>
</html>
